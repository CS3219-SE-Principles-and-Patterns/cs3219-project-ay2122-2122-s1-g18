name: Node.js CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Node.js 14.x for client
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: "npm"
          cache-dependency-path: "client/package-lock.json"
      - name: Install client dependencies
        run: npm install
        working-directory: client
      - name: Lint client
        run: npm run lint
        working-directory: client
      - name: Build static files
        run: npm run build
        working-directory: client

      - name: Set up Node.js 14.x for server
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: "npm"
          cache-dependency-path: "server/package-lock.json"
      - name: Create mongo Docker containter
        uses: DigiPie/mongo-action@v1.0.1
        with:
          image-version: latest
          port: 27017
      - name: Test mongo connection
        run: |
          sudo mongo localhost:27017
          mongoimport --uri mongodb://localhost:27017 --db project3219 --collection users --file ./MOCK_DATA.json --jsonArray
        working-directory: server
      - name: Create .env
        run: |
          touch .env
          echo MONGO_URI_TEST=${{secrets.MONGO_URI_TEST}} >> .env
          echo JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}} >> .env
        working-directory: server
      - name: Install server dependencies
        run: npm install
        working-directory: server
      - name: Lint server
        run: npm run lint
        working-directory: server
      - name: Test server
        run: npm test
        working-directory: server

      - name: Copy client static files to server
        run: cp -R client/dist server/dist
      - name: Login to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          justlogin: true
      - name: Add Heroku remote
        run: heroku git:remote -a shrektech
        working-directory: server
      - name: Push to Heroku
        run: |
          git config --global user.email ${{secrets.HEROKU_EMAIL}}
          git config --global user.name ${{secrets.GIT_NAME}}
          git add .
          git commit -m "Deploy"
          git push -f heroku `git subtree split --prefix server main`:main
